{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/yrvalverde/Documents/angularV2/app-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/progress-spinner\";\nimport * as i8 from \"@angular/material/card\";\n\nfunction LoginComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" No es un correo v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La contrase\\u00F1a no es valida \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_spinner_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 8);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 20);\n  }\n}\n\nexport class LoginComponent {\n  constructor(fb, router, authService) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.loading = false;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  loginCheck() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield _this.authService.getUserCredentials(_this.loginForm.value);\n\n      if (res !== null) {\n        localStorage.setItem('token', res?.data?.token);\n      }\n    })();\n  }\n\n  ngOnInit() {}\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 6,\n  consts: [[3, \"formGroup\"], [\"appearance\", \"outline\", 1, \"example-form-field\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"email\", \"type\", \"email\"], [4, \"ngIf\"], [\"appearance\", \"fill\", 1, \"example-form-field\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"contrase\\u00F1a\"], [1, \"btn\", \"btn-primary\", \"mt-5\", \"d-flex\", \"flex-row\", \"aling-items-center\", 2, \"gap\", \"1rem\", 3, \"disabled\", \"click\"], [\"class\", \"spiner\", 3, \"diameter\", 4, \"ngIf\"], [1, \"spiner\", 3, \"diameter\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-card\")(2, \"div\")(3, \"mat-form-field\", 1)(4, \"mat-label\");\n      i0.ɵɵtext(5, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵtemplate(7, LoginComponent_mat_error_7_Template, 2, 0, \"mat-error\", 3);\n      i0.ɵɵtemplate(8, LoginComponent_mat_error_8_Template, 2, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\")(10, \"mat-form-field\", 4)(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵtemplate(14, LoginComponent_mat_error_14_Template, 2, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\")(16, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_16_listener() {\n        return ctx.loginCheck();\n      });\n      i0.ɵɵtemplate(17, LoginComponent_mat_spinner_17_Template, 1, 1, \"mat-spinner\", 7);\n      i0.ɵɵtext(18, \" Submit \");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].hasError(\"email\") || false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].hasError(\"required\") || false);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid || ctx.loading == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.MatError, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.MatProgressSpinner, i8.MatCard],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":";AACA,SAAsBA,UAAtB,QAAwC,gBAAxC;;;;;;;;;;;;;ICUQC;IAGEA;IACFA;;;;;;IACAA;IAGEA;IACFA;;;;;;IAYAA;IACEA;IACFA;;;;;;IAUAA;;;;IACEA;;;;ADnCV,OAAM,MAAOC,cAAP,CAAqB;EAGzBC,YACSC,EADT,EAESC,MAFT,EAGUC,WAHV,EAGkC;IAFzB;IACA;IACC;IALH,eAAmB,KAAnB;IAQP,iBAAY,KAAKF,EAAL,CAAQG,KAAR,CAAc;MACxBC,KAAK,EAAE,CAAC,EAAD,EAAK,CAACR,UAAU,CAACQ,KAAZ,EAAmBR,UAAU,CAACS,QAA9B,CAAL,CADiB;MAExBC,QAAQ,EAAE,CAAC,EAAD,EAAK,CAACV,UAAU,CAACS,QAAZ,EAAsBT,UAAU,CAACW,SAAX,CAAqB,CAArB,CAAtB,CAAL;IAFc,CAAd,CAAZ;EAFI;;EAOEC,UAAU;IAAA;;IAAA;MACd,MAAMC,GAAG,SAAS,KAAI,CAACP,WAAL,CAAiBQ,kBAAjB,CAAoC,KAAI,CAACC,SAAL,CAAeC,KAAnD,CAAlB;;MACA,IAAIH,GAAG,KAAK,IAAZ,EAAkB;QAChBI,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,GAAG,EAAEM,IAAL,EAAWC,KAAzC;MACD;IAJa;EAKf;;EAEDC,QAAQ,IAAW;;AArBM;;;mBAAdnB,gBAAcD;AAAA;;;QAAdC;EAAcoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BzB,gCAA8B,CAA9B,EAA8B,UAA9B,EAA8B,CAA9B,EAA8B,KAA9B,EAA8B,CAA9B,EAA8B,gBAA9B,EAA8B,CAA9B,EAA8B,CAA9B,EAA8B,WAA9B;MAImBA;MAAMA;MACjBA;MAMAA;MAKAA;MAKFA;MAEFA,4BAAK,EAAL,EAAK,gBAAL,EAAK,CAAL,EAAK,EAAL,EAAK,WAAL;MAEeA;MAAQA;MACnBA;MAMAA;MAGFA;MAEFA,6BAAK,EAAL,EAAK,QAAL,EAAK,CAAL;MAKIA;QAAA,OAAS0B,gBAAT;MAAqB,CAArB;MAEA1B;MAKAA;MACFA;;;;MAlDAA;MAYKA;MAAAA;MAKAA;MAAAA;MAeSA;MAAAA;MASZA;MAAAA;MAKGA;MAAAA","names":["Validators","i0","LoginComponent","constructor","fb","router","authService","group","email","required","password","minLength","loginCheck","res","getUserCredentials","loginForm","value","localStorage","setItem","data","token","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\yrvalverde\\Documents\\angularV2\\app-angular\\src\\app\\public\\components\\login\\login.component.ts","C:\\Users\\yrvalverde\\Documents\\angularV2\\app-angular\\src\\app\\public\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public loading: boolean = false;\n\n  constructor(\n    public fb: FormBuilder,\n    public router: Router,\n    private authService: AuthService\n  ) {}\n\n  loginForm = this.fb.group({\n    email: ['', [Validators.email, Validators.required]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n  });\n\n  async loginCheck() {\n    const res = await this.authService.getUserCredentials(this.loginForm.value);\n    if (res !== null) {\n      localStorage.setItem('token', res?.data?.token);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","<form [formGroup]=\"loginForm\">\n  <mat-card>\n    <div>\n      <mat-form-field class=\"example-form-field\" appearance=\"outline\">\n        <mat-label>E-mail</mat-label>\n        <input\n          matInput\n          formControlName=\"email\"\n          placeholder=\"email\"\n          type=\"email\"\n        />\n        <mat-error\n          *ngIf=\"loginForm.controls['email'].hasError('email') || false\"\n        >\n          No es un correo válido\n        </mat-error>\n        <mat-error\n          *ngIf=\"loginForm.controls['email'].hasError('required') || false\"\n        >\n          Email es requerido\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"example-form-field\" appearance=\"fill\">\n        <mat-label>Password</mat-label>\n        <input\n          matInput\n          type=\"password\"\n          formControlName=\"password\"\n          placeholder=\"contraseña\"\n        />\n        <mat-error *ngIf=\"loginForm.controls['password'].errors\">\n          La contraseña no es valida\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <button\n        class=\"btn btn-primary mt-5 d-flex flex-row aling-items-center\"\n        style=\"gap: 1rem\"\n        [disabled]=\"!loginForm.valid || loading == true\"\n        (click)=\"loginCheck()\"\n      >\n        <mat-spinner\n          [diameter]=\"20\"\n          *ngIf=\"loading\"\n          class=\"spiner\"\n        ></mat-spinner>\n        Submit\n      </button>\n    </div>\n  </mat-card>\n</form>\n"]},"metadata":{},"sourceType":"module"}