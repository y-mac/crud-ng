{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/yrvalverde/Documents/angularV2/app-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { of } from 'rxjs';\nlet LoginFormComponent = class LoginFormComponent {\n  constructor(fb, charactersService, router) {\n    this.fb = fb;\n    this.charactersService = charactersService;\n    this.router = router;\n    this.loading = false;\n    this.personas = [{\n      name: 'John',\n      age: 34\n    }, {\n      name: 'Ana',\n      age: 24\n    }];\n    this.characters = [];\n    this.myObservable = of(1, 2, 3);\n    this.filterName = new FormControl('');\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  /*public loginForm=new FormGroup({\r\n    email:new FormControl(\"\",[Validators.required,Validators.email]),\r\n    password:new FormControl('',[Validators.required,Validators.minLength(8)])\r\n  });*/\n\n\n  doToDetail(id) {\n    this.router.navigate(['/detail/' + id]);\n  }\n\n  ngOnInit() {\n    this.filterNombre = this.filterName.valueChanges.subscribe(value => {\n      console.log(value);\n      this.call(value);\n    }); //llama al servicio\n\n    this.call(); // Create observer object\n\n    const myObserver = {\n      next: x => console.log('Observer got a next value: ' + x),\n      error: err => console.error('Observer got an error: ' + err),\n      complete: () => console.log('Observer got a complete notification')\n    }; // Execute with the observer object\n\n    this.myObservable.subscribe(myObserver);\n    this.valuesSubs = this.loginForm.valueChanges.subscribe(data => {\n      console.log(this.loginForm.controls);\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n    this.filterNombre?.unsubscribe();\n  }\n\n  onSubmit() {\n    console.log('-', this.loginForm);\n    this.loginCall(this.loginForm);\n    localStorage.setItem('curso-angular', JSON.stringify(this.loginForm.value));\n    this.router.navigate(['/app']);\n  }\n  /* public call():void {\r\n    this.charactersService.getCharacters().then(charactersList => {\r\n      this.characters=charactersList?.results\r\n      console.log(\"datos desde login\", this.characters)\r\n    }).catch((error) => {\r\n      this.characters=undefined\r\n    })\r\n      }*/\n\n\n  call(filter) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.characters = (yield _this.charactersService.getCharacters(filter))?.results;\n      console.log('datos', _this.characters);\n    })();\n  }\n\n  loginCall(formVlues) {\n    this.loading = true;\n    setTimeout(() => {\n      localStorage.setItem('curso-angular', JSON.stringify(this.loginForm.value));\n      this.router.navigate(['/app']);\n      this.loading = false;\n    }, 3000);\n  }\n\n};\nLoginFormComponent = __decorate([Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})], LoginFormComponent);\nexport { LoginFormComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","Validators","of","LoginFormComponent","constructor","fb","charactersService","router","name","age","group","email","required","password","minLength","doToDetail","id","navigate","ngOnInit","filterNombre","filterName","valueChanges","subscribe","value","console","log","call","myObserver","next","x","error","err","complete","myObservable","valuesSubs","loginForm","data","controls","ngOnDestroy","subscription","unsubscribe","onSubmit","loginCall","localStorage","setItem","JSON","stringify","filter","characters","getCharacters","results","formVlues","loading","setTimeout","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\yrvalverde\\Documents\\angularV2\\app-angular\\src\\app\\public\\components\\login\\login.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription, of } from 'rxjs';\n/* import { Characters } from 'src/app/interfaces/responses';\nimport { CharactersService } from 'src/app/services/characters.service'; */\n\ntype Persona = {\n  name: string;\n  age: number;\n};\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css'],\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  obs: Observable<string> | undefined;\n  subscription: Subscription | undefined;\n  public loading: boolean = false;\n  public personas: Persona[] = [\n    { name: 'John', age: 34 },\n    { name: 'Ana', age: 24 },\n  ];\n  valuesSubs: Subscription | undefined;\n  public characters: Characters[] | undefined = [];\n  myObservable = of(1, 2, 3);\n  public filterName = new FormControl('');\n  filterNombre: Subscription | undefined;\n\n  constructor(\n    public fb: FormBuilder,\n    private charactersService: CharactersService,\n    private router: Router\n  ) {}\n\n  loginForm = this.fb.group({\n    email: ['', [Validators.email, Validators.required]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n  /*public loginForm=new FormGroup({\n    email:new FormControl(\"\",[Validators.required,Validators.email]),\n    password:new FormControl('',[Validators.required,Validators.minLength(8)])\n  });*/\n  public doToDetail(id: number) {\n    this.router.navigate(['/detail/' + id]);\n  }\n\n  ngOnInit(): void {\n    this.filterNombre = this.filterName.valueChanges.subscribe((value) => {\n      console.log(value);\n      this.call(value);\n    });\n    //llama al servicio\n    this.call();\n    // Create observer object\n    const myObserver = {\n      next: (x: number) => console.log('Observer got a next value: ' + x),\n      error: (err: Error) => console.error('Observer got an error: ' + err),\n      complete: () => console.log('Observer got a complete notification'),\n    };\n\n    // Execute with the observer object\n    this.myObservable.subscribe(myObserver);\n\n    this.valuesSubs = this.loginForm.valueChanges.subscribe((data) => {\n      console.log(this.loginForm.controls);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n    this.filterNombre?.unsubscribe();\n  }\n\n  public onSubmit(): void {\n    console.log('-', this.loginForm);\n\n    this.loginCall(this.loginForm);\n    localStorage.setItem('curso-angular', JSON.stringify(this.loginForm.value));\n    this.router.navigate(['/app']);\n  }\n\n  /* public call():void {\n    this.charactersService.getCharacters().then(charactersList => {\n      this.characters=charactersList?.results\n      console.log(\"datos desde login\", this.characters)\n    }).catch((error) => {\n      this.characters=undefined\n    })\n\n  }*/\n\n  public async call(filter?: string): Promise<void> {\n    this.characters = (\n      await this.charactersService.getCharacters(filter)\n    )?.results;\n    console.log('datos', this.characters);\n  }\n\n  loginCall(formVlues: any): void {\n    this.loading = true;\n    setTimeout(() => {\n      localStorage.setItem(\n        'curso-angular',\n        JSON.stringify(this.loginForm.value)\n      );\n      this.router.navigate(['/app']);\n      this.loading = false;\n    }, 3000);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}